[{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommedations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependenct package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/articles/run_with_docker_container.html","id":"pull-and-run-the-docker-image","dir":"Articles","previous_headings":"","what":"Pull and run the docker image","title":"Guide to run {verdepcheck} strategies from a docker container","text":"docker image used vignette available GitHub Container Registry (ghcr.io) used Insights Engineering R packages (teal tern).","code":"docker pull ghcr.io/insightsengineering/rstudio:latest docker run --rm -p 8787:8787 -e PASSWORD=test -v ./:/workspace/project ghcr.io/insightsengineering/rstudio"},{"path":"https://insightsengineering.github.io/verdepcheck/main/articles/run_with_docker_container.html","id":"open-the-rstudio-in-the-browser","dir":"Articles","previous_headings":"","what":"Open the RStudio in the browser","title":"Guide to run {verdepcheck} strategies from a docker container","text":"Navigate [http://localhost:8787] login username rstudio password test.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/articles/run_with_docker_container.html","id":"clean-pkgcache-cache-before-repeated-runs","dir":"Articles","previous_headings":"","what":"Clean pkgcache cache before repeated runs","title":"Guide to run {verdepcheck} strategies from a docker container","text":"order avoid using cached downloads previous run, recommend clean pkgcache directory. note: location pkgcache directory may vary depending operation system. Use R command pkgcache::pkg_cache_summary() find location system.","code":"# This command should be run inside the container rm -rf /home/rstudio/.cache/R/pkgcache"},{"path":"https://insightsengineering.github.io/verdepcheck/main/articles/run_with_docker_container.html","id":"run-the-code-below-inside-the-container","dir":"Articles","previous_headings":"","what":"Run the code below inside the container","title":"Guide to run {verdepcheck} strategies from a docker container","text":"","code":"# Dependencies -----------------------------------------------------------------  renv::install(c(\"checkmate\", \"withr\", \"testthat\"), prompt = FALSE) renv::install(\"insightsengineering/verdepcheck\", prompt = FALSE)  # Parameters -------------------------------------------------------------------  github_id <- \"insightsengineering/teal.code\" ref <- NULL # --branch <name>, tag or NULL depth <- \"--depth 1\" # --depth <depth number> or NULL build_args <- \" \" # When empty it should have 1 space r_cmd_check_args <- \" \" # When empty it should have 1 space strategy <- \"min_isolated\" # one of min_isolated, min_cohort, release or max  # Logic to run action (don't change) -------------------------------------------  repo_path <- withr::local_tempfile(pattern = \"repo\")  checkmate::assert_string(github_id) checkmate::assert_string(depth, null.ok = TRUE, pattern = \"--depth [0-9]+\") checkmate::assert_string(ref, null.ok = TRUE, pattern = \"--branch .+\") checkmate::assert_string(build_args) checkmate::assert_string(r_cmd_check_args) checkmate::assert_choice(strategy, c(\"min_isolated\", \"min_cohort\", \"release\", \"max\"))  # Clone repository system2(   \"git\",   args = list(     \"clone\",     depth,     ref,     paste0(\"https://github.com/\", github_id),     repo_path   ) |> purrr::compact() # remove empty arguments if they are NULL )  setwd(repo_path)  # Prepare arguments for script call args <- c() args[1] <- \"\" # path to file (should be empty for current directory) args[2] <- build_args # build_args args[3] <- r_cmd_check_args # check_args args[4] <- strategy # strategy  # Mock the function inside the script testthat::with_mocked_bindings(   code = source(\"https://raw.githubusercontent.com/insightsengineering/r-verdepcheck-action/main/script.R\"),   commandArgs = function(...) args,   .package = \"base\" )"},{"path":"https://insightsengineering.github.io/verdepcheck/main/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pawel Rucki. Author, maintainer. Andre Verissimo. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pawel Rucki, Andre Verissimo (2024). verdepcheck: Check Package using Various Versions Dependencies. R package version 0.0.0.9001, https://github.com/insightsengineering/verdepcheck/.","code":"@Manual{,   title = {verdepcheck: Check Package using Various Versions of Dependencies},   author = {{Pawel Rucki} and {Andre Verissimo}},   year = {2024},   note = {R package version 0.0.0.9001},   url = {https://github.com/insightsengineering/verdepcheck/}, }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/index.html","id":"verdepcheck","dir":"","previous_headings":"","what":"Check Package using Various Versions of Dependencies","title":"Check Package using Various Versions of Dependencies","text":"ever encounter following errors? package tool package developers check package using various versions dependencies. help detect new breaking changes dependencies well minimal version supported.","code":"Error: object ‚Äòfoo‚Äô is not exported by 'namespace:bar' `foo()` was deprecated in bar 1.0.0. i Please use `baz()` instead."},{"path":"https://insightsengineering.github.io/verdepcheck/main/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Check Package using Various Versions of Dependencies","text":"Typical workflow includes following: read local package dependencies DESCRIPTION file using dedicated Config/Needs/verdepcheck field derive dependencies version Imports Suggests according strategy used resolve identify potential conflicts dependencies download install temporary directory execute R CMD CHECK using directory previous step library path Supported strategies : max - use greatest version dependent packages. Please note using development version guaranteed stable. release - use released version dependent packages. try use CRAN possible else GitHub release available use else fail. min_cohort - find maximum date directly dependent packages release dates use PPM snapshot date dependency resolve. min_isolated - direct dependency: find release date use PPM snapshot resolving . Next, combine individual resolutions resolve altogether . main functions : new_<strategy>_deps_installation_proposal creating installation_proposal objects <strategy>_deps_check creates executes installation_proposal run \"R CMD CHECK\" package heavily based pkgdepends dependency resolution rcmdcheck executing \"R CMD CHECK\".","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Check Package using Various Versions of Dependencies","text":"","code":"devtools::install_github(\"insightsengineering/verdepcheck\")"},{"path":"https://insightsengineering.github.io/verdepcheck/main/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Check Package using Various Versions of Dependencies","text":"main goal package authors use within GitHub Action CI tool. See r-verdepcheck-action.","code":"x <- max_deps_check(\"(path to your package)\")  # print results for debugging x$ip$show_solution() x$ip$draw()  # create artifact x$ip$create_lockfile(\"/path/to/pkg.lock\")  # print R CMD CHECK results x$check$session_info x$check$status"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_if_on_cran.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if package is available on CRAN. ‚Äî check_if_on_cran","title":"Check if package is available on CRAN. ‚Äî check_if_on_cran","text":"Check package available CRAN.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_if_on_cran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if package is available on CRAN. ‚Äî check_if_on_cran","text":"","code":"check_if_on_cran(remote_ref, op = \"\", op_ver = \"\")"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_if_on_cran.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if package is available on CRAN. ‚Äî check_if_on_cran","text":"","code":"if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" verdepcheck:::check_if_on_cran(list(package = \"dplyr\")) verdepcheck:::check_if_on_cran(list(package = \"dplyr\"), op = \">=\", op_ver = \"1.1.0\") verdepcheck:::check_if_on_cran(list(package = \"dplyr\"), op = \">=\", op_ver = \"9999.9.99\") verdepcheck:::check_if_on_cran(list(package = \"dplyr\"), op = \"<\", op_ver = \"0.0.0\") }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Executes rcmdcheck::rcmdcheck() on a local package using libpath from the installation plan. ‚Äî check_ip","title":"Executes rcmdcheck::rcmdcheck() on a local package using libpath from the installation plan. ‚Äî check_ip","text":"Executes rcmdcheck::rcmdcheck() local package using libpath installation plan.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Executes rcmdcheck::rcmdcheck() on a local package using libpath from the installation plan. ‚Äî check_ip","text":"","code":"check_ip(ip, path, build_args = character(), check_args = character(), ...)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Executes rcmdcheck::rcmdcheck() on a local package using libpath from the installation plan. ‚Äî check_ip","text":"ip (pkg_installation_plan) object execute path (string) path package sources build_args (string) value passed build_args argument rcmdcheck::rcmdcheck() check_args (string) value passed args argument rcmdcheck::rcmdcheck() ... arguments passed rcmdcheck::rcmdcheck()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_ip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Executes rcmdcheck::rcmdcheck() on a local package using libpath from the installation plan. ‚Äî check_ip","text":"S3 object (list) fields errors, warnings notes. character vectors containing output failed check.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_valid_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for package versions that comply with an operator and version ‚Äî check_valid_version","title":"Check for package versions that comply with an operator and version ‚Äî check_valid_version","text":"Check package versions comply operator version","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_valid_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for package versions that comply with an operator and version ‚Äî check_valid_version","text":"","code":"check_valid_version(x, op, op_ver)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_valid_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for package versions that comply with an operator and version ‚Äî check_valid_version","text":"x vector valid package versions. op character(1) relational operator (>=, ==, ...) op_ver character(1) package_version(1) version compare using relational operator.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_valid_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for package versions that comply with an operator and version ‚Äî check_valid_version","text":"","code":"versions <- paste(1:10, 0, sep = \".\") verdepcheck:::check_valid_version(versions, \">=\", \"3.1\") #>  [1] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/cli_pb_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Create cli progress bar to print status to the console. ‚Äî cli_pb_init","title":"Create cli progress bar to print status to the console. ‚Äî cli_pb_init","text":"Create cli progress bar print status console.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/cli_pb_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create cli progress bar to print status to the console. ‚Äî cli_pb_init","text":"","code":"cli_pb_init(type, total, ...)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deparse_dep_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Deparse a dependency string ‚Äî deparse_dep_str","title":"Deparse a dependency string ‚Äî deparse_dep_str","text":"Deparse dependency string","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deparse_dep_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deparse a dependency string ‚Äî deparse_dep_str","text":"","code":"deparse_dep_str(x)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deparse_dep_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deparse a dependency string ‚Äî deparse_dep_str","text":"x (character) Dependency string form <package name> (<operator> <version>). See examples.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deparse_dep_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deparse a dependency string ‚Äî deparse_dep_str","text":"list package, op, op_ver ver_str fields.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deparse_dep_str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deparse a dependency string ‚Äî deparse_dep_str","text":"","code":"verdepcheck:::deparse_dep_str(\"foo\") #> $package #> [1] \"foo\" #>  #> $op #> [1] \"\" #>  #> $op_ver #> [1] \"\" #>  #> $ver_str #> [1] \"*\" #>  verdepcheck:::deparse_dep_str(\"foo (>= 1.2.3)\") #> $package #> [1] \"foo\" #>  #> $op #> [1] \">=\" #>  #> $op_ver #> [1] \"1.2.3\" #>  #> $ver_str #> [1] \">= 1.2.3\" #>"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deparse_ver_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Deparse a version string ‚Äî deparse_ver_str","title":"Deparse a version string ‚Äî deparse_ver_str","text":"Deparse version string","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deparse_ver_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deparse a version string ‚Äî deparse_ver_str","text":"","code":"deparse_ver_str(x)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deparse_ver_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deparse a version string ‚Äî deparse_ver_str","text":"x (character) Version string form <operator> <version>. See examples.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deparse_ver_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deparse a version string ‚Äî deparse_ver_str","text":"list op op_ver fields.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deparse_ver_str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deparse a version string ‚Äî deparse_ver_str","text":"","code":"verdepcheck:::deparse_ver_str(\">= 1.2.3\") #> $op #> [1] \">=\" #>  #> $op_ver #> [1] \"1.2.3\" #>"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","title":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","text":"Execute R CMD CHECK local package dependencies pre-installed using various strategies.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","text":"","code":"max_deps_check(   path,   extra_deps = character(),   config = list(),   build_args = character(),   check_args = character(),   ... )  release_deps_check(   path,   extra_deps = character(),   config = list(),   build_args = character(),   check_args = character(),   ... )  min_cohort_deps_check(   path,   extra_deps = character(),   config = list(),   build_args = character(),   check_args = character(),   ... )  min_isolated_deps_check(   path,   extra_deps = character(),   config = list(),   build_args = character(),   check_args = character(),   ... )"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","text":"path (string) path package sources extra_deps (character(1)) Extra dependencies specified similarly DESCRIPTION file, .e. \"<package name> (<operator> <version>)\" <operator> <version> optional. Multiple entries possible separated \";\". config (list) configuration options. See pkgdepends::pkg_config details. \"dependencies\" \"library\" elements overwritten package level defaults. build_args (string) value passed build_args argument rcmdcheck::rcmdcheck() check_args (string) value passed args argument rcmdcheck::rcmdcheck() ... arguments passed rcmdcheck::rcmdcheck()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","text":"named list two elements: \"ip\" - installation plan object \"check\" - returned value rcmdcheck::rcmdcheck()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check.html","id":"strategies","dir":"Reference","previous_headings":"","what":"strategies","title":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","text":"Currently implemented strategies: max - use greatest version dependent packages. Please note using development version guaranteed stable. See get_ref_max details. release - use released version dependent packages. try use CRAN possible else GitHub release available use else fail. See get_ref_release details. min_cohort - find maximum date directly dependent packages release dates use PPM snapshot date dependency resolve. min_isolated - direct dependency: find release date use PPM snapshot resolving . Next, combine individual resolutions resolve altogether . \"min\" strategies relies PPM snapshot order limit versions indirect dependencies dependency resolution ends package released earlier dependency. However, always true min_isolated strategy - done purpose. Please note min_cohort min_isolated strategies \"stable\". rest basing dynamic references therefore results might different without changes tested package. straightforward example max strategy environment different push dependencies.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","text":"","code":"if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" x <- max_deps_check(\".\") x$ip x$check } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" x <- release_deps_check(\".\") x$ip x$check } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" x <- min_cohort_deps_check(\".\") x$ip x$check } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" x <- min_isolated_deps_check(\".\") x$ip x$check }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":null,"dir":"Reference","previous_headings":"","what":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"functionalities read local package DESCRIPTION file, derive dependencies \"Config/Needs/verdepcheck\" create installation proposal using various strategies package versions described .","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"","code":"new_max_deps_installation_proposal(   path,   extra_deps = character(0L),   config = list() )  new_release_deps_installation_proposal(   path,   extra_deps = character(0L),   config = list() )  new_min_cohort_deps_installation_proposal(   path,   extra_deps = character(0L),   config = list() )  new_min_isolated_deps_installation_proposal(   path,   extra_deps = character(0L),   config = list() )"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"path (string) path package sources extra_deps (character(1)) Extra dependencies specified similarly DESCRIPTION file, .e. \"<package name> (<operator> <version>)\" <operator> <version> optional. Multiple entries possible separated \";\". config (list) configuration options. See pkgdepends::pkg_config details. \"dependencies\" \"library\" elements overwritten package level defaults.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"pkg_installation_plan object","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":"strategies","dir":"Reference","previous_headings":"","what":"strategies","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"Currently implemented strategies: max - use greatest version dependent packages. Please note using development version guaranteed stable. See get_ref_max details. release - use released version dependent packages. try use CRAN possible else GitHub release available use else fail. See get_ref_release details. min_cohort - find maximum date directly dependent packages release dates use PPM snapshot date dependency resolve. min_isolated - direct dependency: find release date use PPM snapshot resolving . Next, combine individual resolutions resolve altogether . \"min\" strategies relies PPM snapshot order limit versions indirect dependencies dependency resolution ends package released earlier dependency. However, always true min_isolated strategy - done purpose. Please note min_cohort min_isolated strategies \"stable\". rest basing dynamic references therefore results might different without changes tested package. straightforward example max strategy environment different push dependencies.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":"configuration","dir":"Reference","previous_headings":"","what":"configuration","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"verdepcheck look \"Config/Needs/verdepcheck\" field DESCRIPTION file dependent packages references. See pkgdepends::pkg_refs details package DESCRIPTION file example. Please note features enabled package references GitHub. specify additional details (.e. tag, commit, PR @*release) reference changed. Therefore, order make full use various strategies, recommended specify general reference form [<package>=][github::]<username>/<repository>[/<subdir>] - .e. without [<detail>] part. Please see also pkgdepends::pkg_config pak::pak-config configuration possibilities.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"","code":"if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" x <- new_max_deps_installation_proposal(\".\") x$solve() x$get_solution() } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" x <- new_release_deps_installation_proposal(\".\") x$solve() x$get_solution() } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" x <- new_min_cohort_deps_installation_proposal(\".\") solve_ip(x) x$get_solution() } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" x <- new_min_isolated_deps_installation_proposal(\".\") solve_ip(x) x$get_solution() }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_add_extra_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds extra dependencies to the desc object. ‚Äî desc_add_extra_deps","title":"Adds extra dependencies to the desc object. ‚Äî desc_add_extra_deps","text":"add dependencies Imports field.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_add_extra_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds extra dependencies to the desc object. ‚Äî desc_add_extra_deps","text":"","code":"desc_add_extra_deps(d, x)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_add_extra_deps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds extra dependencies to the desc object. ‚Äî desc_add_extra_deps","text":"d (desc) DESCRIPTION object desc::desc x (character(1)) Extra dependencies specified similarly DESCRIPTION file, .e. \"<package name> (<operator> <version>)\" <operator> <version> optional. Multiple entries possible separated \";\".","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_add_extra_deps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds extra dependencies to the desc object. ‚Äî desc_add_extra_deps","text":"desc object added dependencies.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_add_extra_deps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds extra dependencies to the desc object. ‚Äî desc_add_extra_deps","text":"","code":"d <- desc::desc(cmd = \"!new\") d <- verdepcheck:::desc_add_extra_deps(d, \"foo (>= 1.2.3)\") d <- verdepcheck:::desc_add_extra_deps(d, \"bar (>= 2.3.4); baz (>= 3.4.5)\") d$get_deps() #>      type package  version #> 1 Imports     bar >= 2.3.4 #> 2 Imports     baz >= 3.4.5 #> 3 Imports     foo >= 1.2.3"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_cond_set_refs.html","id":null,"dir":"Reference","previous_headings":"","what":"Set ","title":"Set ","text":"Set \"Config/Needs/verdepcheck\" section desc object empty else clear section.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_cond_set_refs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set ","text":"","code":"desc_cond_set_refs(d, refs)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_remotes_cleanup.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Remotes in the desc that have been resolved to a GitHub tag or are in CRAN. ‚Äî desc_remotes_cleanup","title":"Replace Remotes in the desc that have been resolved to a GitHub tag or are in CRAN. ‚Äî desc_remotes_cleanup","text":"Replaces existing Remotes entry resolved GitHub tag Config/Needs/verdepcheck.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_remotes_cleanup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Remotes in the desc that have been resolved to a GitHub tag or are in CRAN. ‚Äî desc_remotes_cleanup","text":"","code":"desc_remotes_cleanup(d)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_remotes_cleanup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Remotes in the desc that have been resolved to a GitHub tag or are in CRAN. ‚Äî desc_remotes_cleanup","text":"d (desc) DESCRIPTION object","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_remotes_cleanup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Remotes in the desc that have been resolved to a GitHub tag or are in CRAN. ‚Äî desc_remotes_cleanup","text":"","code":"# Example that should replace dplyr & tibble on Remotes but not pkgdepends  d <- desc::desc(   file = verdepcheck:::local_description(     list(       dplyr = \"Import\",       tibble = \"Import\",       pkgdepends = \"Import\"     ),     remotes = c(       \"tidyverse/dplyr@*release\",       \"tidyverse/tibble@*release\",       \"r-lib/pkgdepends@*release\"     ),     need_verdepcheck = c(       \"dplyr\",       \"tibble=tidyverse/tibble@v3.2.1\"     )   ) ) verdepcheck:::desc_remotes_cleanup(d) #> Package: {{ Package }} #> Title: {{ Title }} #> Version: 1.0.0 #> Authors@R (parsed): #>     * Jo Doe <jodoe@dom.ain> [aut, cre] #> Maintainer: {{ Maintainer }} #> Description: {{ Description }} #> License: {{ License }} #> URL: {{ URL }} #> BugReports: {{ BugReports }} #> Imports: #>     dplyr, #>     pkgdepends, #>     tibble #> Remotes: #>     r-lib/pkgdepends@*release, #>     tibble=tidyverse/tibble@v3.2.1 #> Config/Needs/verdepcheck: dplyr, tibble=tidyverse/tibble@v3.2.1 #> Encoding: UTF-8"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_to_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Create installation_plan object from desc object ‚Äî desc_to_ip","title":"Create installation_plan object from desc object ‚Äî desc_to_ip","text":"Create installation_plan object desc object","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/desc_to_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create installation_plan object from desc object ‚Äî desc_to_ip","text":"","code":"desc_to_ip(d, config)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/download_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve installation plan ignoring entries with ","title":"Solve installation plan ignoring entries with ","text":"Solve installation plan ignoring entries \"@*release\" remote refs detected conflicts.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/download_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve installation plan ignoring entries with ","text":"","code":"download_ip(ip)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/download_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve installation plan ignoring entries with ","text":"ip (pkg_installation_plan) object execute","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/download_ip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve installation plan ignoring entries with ","text":"pkg_installation_plan object invisibly","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/execute_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Executes installation plan and rcmdcheck::rcmdcheck() in ","title":"Executes installation plan and rcmdcheck::rcmdcheck() in ","text":"Executes installation plan rcmdcheck::rcmdcheck() \"try mode\" always return.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/execute_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Executes installation plan and rcmdcheck::rcmdcheck() in ","text":"","code":"execute_ip(ip, path, build_args, check_args, ...)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/execute_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Executes installation plan and rcmdcheck::rcmdcheck() in ","text":"ip (pkg_installation_plan) object execute path (string) path package sources build_args (string) value passed build_args argument rcmdcheck::rcmdcheck() check_args (string) value passed args argument rcmdcheck::rcmdcheck() ... arguments passed rcmdcheck::rcmdcheck()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/execute_ip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Executes installation plan and rcmdcheck::rcmdcheck() in ","text":"named list two elements: \"ip\" - installation plan object \"check\" - returned value rcmdcheck::rcmdcheck()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/filter_valid_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter for package versions that comply with an operator and version ‚Äî filter_valid_version","title":"Filter for package versions that comply with an operator and version ‚Äî filter_valid_version","text":"Filter package versions comply operator version","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/filter_valid_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter for package versions that comply with an operator and version ‚Äî filter_valid_version","text":"","code":"filter_valid_version(x, op, op_ver)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/filter_valid_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter for package versions that comply with an operator and version ‚Äî filter_valid_version","text":"x vector valid package versions. op character(1) relational operator (>=, ==, ...) op_ver character(1) package_version(1) version compare using relational operator.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/filter_valid_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter for package versions that comply with an operator and version ‚Äî filter_valid_version","text":"","code":"versions <- paste(1:10, 0, sep = \".\") verdepcheck:::filter_valid_version(versions, \">=\", \"3.1\") #> [1] ‚Äò4.0‚Äô  ‚Äò5.0‚Äô  ‚Äò6.0‚Äô  ‚Äò7.0‚Äô  ‚Äò8.0‚Äô  ‚Äò9.0‚Äô  ‚Äò10.0‚Äô"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_desc_field_pkgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the packages from the custom configuration field ‚Äî get_desc_field_pkgs","title":"Get the packages from the custom configuration field ‚Äî get_desc_field_pkgs","text":"Get packages custom configuration field","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_desc_field_pkgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the packages from the custom configuration field ‚Äî get_desc_field_pkgs","text":"","code":"get_desc_field_pkgs(d)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_desc_field_pkgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the packages from the custom configuration field ‚Äî get_desc_field_pkgs","text":"d (desc) DESCRIPTION object desc::description","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_desc_field_pkgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the packages from the custom configuration field ‚Äî get_desc_field_pkgs","text":"character string","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_desc_from_gh.html","id":null,"dir":"Reference","previous_headings":"","what":"Get DESCRIPTION from GitHub Repository ‚Äî get_desc_from_gh","title":"Get DESCRIPTION from GitHub Repository ‚Äî get_desc_from_gh","text":"Get DESCRIPTION GitHub Repository","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_desc_from_gh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get DESCRIPTION from GitHub Repository ‚Äî get_desc_from_gh","text":"","code":"get_desc_from_gh(org, repo, ref = \"\")"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_desc_from_gh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get DESCRIPTION from GitHub Repository ‚Äî get_desc_from_gh","text":"","code":"if (FALSE) { # gh::gh_token() != \"\" verdepcheck:::get_desc_from_gh(\"tidyverse\", \"dplyr\") verdepcheck:::get_desc_from_gh(\"tidyverse\", \"dplyr\", \"v1.1.0\") }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_max.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reference to the maximal version of the package. ‚Äî get_ref_max","title":"Get reference to the maximal version of the package. ‚Äî get_ref_max","text":"Get reference maximal version package.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reference to the maximal version of the package. ‚Äî get_ref_max","text":"","code":"get_ref_max(remote_ref)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reference to the maximal version of the package. ‚Äî get_ref_max","text":"remote_ref (remote_ref) object created pkgdepends::parse_pkg_ref()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_max.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get reference to the maximal version of the package. ‚Äî get_ref_max","text":"(remote_ref) object package reference","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_min.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reference to the minimal version of the package. ‚Äî get_ref_min","title":"Get reference to the minimal version of the package. ‚Äî get_ref_min","text":"Get reference minimal version package. standard CRAN-type remote - use pkgcache::cran_archive_list() obtain historical data. GitHub type remote - use gh::gh_gql() get list releases tags gh::gh() download DESCRIPTION file read package version.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reference to the minimal version of the package. ‚Äî get_ref_min","text":"","code":"get_ref_min(remote_ref, op = \"\", op_ver = \"\")  # S3 method for class 'remote_ref' get_ref_min(remote_ref, op = \"\", op_ver = \"\")  # S3 method for class 'remote_ref_cran' get_ref_min(remote_ref, op = \"\", op_ver = \"\")  # S3 method for class 'remote_ref_standard' get_ref_min(remote_ref, op = \"\", op_ver = \"\")  # S3 method for class 'remote_ref_github' get_ref_min(remote_ref, op = \"\", op_ver = \"\")"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_min.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reference to the minimal version of the package. ‚Äî get_ref_min","text":"remote_ref (remote_ref) object created pkgdepends::parse_pkg_ref() op (character(1)) optional, version condition comparison operator (e.g. \">\", \">=\") op_ver (character(1)) optional, version number op argument applied","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_min.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get reference to the minimal version of the package. ‚Äî get_ref_min","text":"(remote_ref) object package reference","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_min.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get reference to the minimal version of the package. ‚Äî get_ref_min","text":"","code":"get_ref_min(pkgdepends::parse_pkg_ref(\"bioc::MultiAssayExperiment\")) #> $package #> [1] \"MultiAssayExperiment\" #>  #> $atleast #> [1] \"\" #>  #> $version #> [1] \"\" #>  #> $ref #> [1] \"bioc::MultiAssayExperiment\" #>  #> $type #> [1] \"bioc\" #>  #> $params #> character(0) #>  #> attr(,\"class\") #> [1] \"remote_ref_bioc\" \"remote_ref\"      \"list\"            if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" get_ref_min(pkgdepends::parse_pkg_ref(\"cran::dplyr\")) } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" get_ref_min(pkgdepends::parse_pkg_ref(\"dplyr\")) } if (FALSE) { # gh::gh_token() != \"\" get_ref_min(pkgdepends::parse_pkg_ref(\"cran/dplyr\")) }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_min_incl_cran.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reference to the minimal version of the package including also check in CRAN repository. ‚Äî get_ref_min_incl_cran","title":"Get reference to the minimal version of the package including also check in CRAN repository. ‚Äî get_ref_min_incl_cran","text":"Get reference minimal version package including also check CRAN repository.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_min_incl_cran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reference to the minimal version of the package including also check in CRAN repository. ‚Äî get_ref_min_incl_cran","text":"","code":"get_ref_min_incl_cran(remote_ref, op = \"\", op_ver = \"\")  # S3 method for class 'remote_ref' get_ref_min_incl_cran(remote_ref, op = \"\", op_ver = \"\")  # S3 method for class 'remote_ref_github' get_ref_min_incl_cran(remote_ref, op = \"\", op_ver = \"\")"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_min_incl_cran.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reference to the minimal version of the package including also check in CRAN repository. ‚Äî get_ref_min_incl_cran","text":"remote_ref (remote_ref) object created pkgdepends::parse_pkg_ref() op (character(1)) optional, version condition comparison operator (e.g. \">\", \">=\") op_ver (character(1)) optional, version number op argument applied","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_min_incl_cran.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get reference to the minimal version of the package including also check in CRAN repository. ‚Äî get_ref_min_incl_cran","text":"(remote_ref) object package reference","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_min_incl_cran.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get reference to the minimal version of the package including also check in CRAN repository. ‚Äî get_ref_min_incl_cran","text":"","code":"verdepcheck:::get_ref_min_incl_cran(pkgdepends::parse_pkg_ref(\"bioc::MultiAssayExperiment\")) #> $package #> [1] \"MultiAssayExperiment\" #>  #> $atleast #> [1] \"\" #>  #> $version #> [1] \"\" #>  #> $ref #> [1] \"bioc::MultiAssayExperiment\" #>  #> $type #> [1] \"bioc\" #>  #> $params #> character(0) #>  #> attr(,\"class\") #> [1] \"remote_ref_bioc\" \"remote_ref\"      \"list\"            if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" verdepcheck:::get_ref_min_incl_cran(pkgdepends::parse_pkg_ref(\"dplyr\")) } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" verdepcheck:::get_ref_min_incl_cran(pkgdepends::parse_pkg_ref(\"cran/dplyr\")) }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_release.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reference to the release version of the package. ‚Äî get_ref_release","title":"Get reference to the release version of the package. ‚Äî get_ref_release","text":"Get reference release version package.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_release.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reference to the release version of the package. ‚Äî get_ref_release","text":"","code":"get_ref_release(remote_ref)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_release.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reference to the release version of the package. ‚Äî get_ref_release","text":"remote_ref (remote_ref) object created pkgdepends::parse_pkg_ref()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_release.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get reference to the release version of the package. ‚Äî get_ref_release","text":"(remote_ref) object package reference","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_ref_release.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get reference to the release version of the package. ‚Äî get_ref_release","text":"","code":"if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" get_ref_release(pkgdepends::parse_pkg_ref(\"dplyr\")) get_ref_release(pkgdepends::parse_pkg_ref(\"tidyverse/dplyr\")) }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_refs_from_desc.html","id":null,"dir":"Reference","previous_headings":"","what":"Read DESCRIPTION file and return list of references. ‚Äî get_refs_from_desc","title":"Read DESCRIPTION file and return list of references. ‚Äî get_refs_from_desc","text":"Returned list union references specified \"Config/Needs/verdepcheck\" field standard references covered dependencies.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_refs_from_desc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read DESCRIPTION file and return list of references. ‚Äî get_refs_from_desc","text":"","code":"get_refs_from_desc(d)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_refs_from_desc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read DESCRIPTION file and return list of references. ‚Äî get_refs_from_desc","text":"","code":"if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" d <- desc::desc(\"!new\") d$set_dep(\"foo\", \"Import\") d$set_dep(\"bar\", \"Suggest\") d$set_list(\"Config/Needs/verdepcheck\", \"foo/bar\") d$set_list(\"Config/Needs/verdepcheck\", \"foo/baz\") # not in package deps - will be skipped get_refs_from_desc(d) }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_release_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data for CRAN/Bioconductor package releases ‚Äî get_release_data","title":"Get data for CRAN/Bioconductor package releases ‚Äî get_release_data","text":"Get data CRAN/Bioconductor package releases","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_release_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data for CRAN/Bioconductor package releases ‚Äî get_release_data","text":"","code":"get_release_data(package)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_release_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data for CRAN/Bioconductor package releases ‚Äî get_release_data","text":"","code":"if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" verdepcheck:::get_release_data(\"dplyr\") verdepcheck:::get_release_data(\"SummarizedExperiment\") }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_release_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get release date. ‚Äî get_release_date","title":"Get release date. ‚Äî get_release_date","text":"Get release date. Get release date GitHub references","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_release_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get release date. ‚Äî get_release_date","text":"","code":"get_release_date(remote_ref)  # S3 method for class 'remote_ref_github' get_release_date(remote_ref)  # S3 method for class 'remote_ref_cran' get_release_date(remote_ref)  # S3 method for class 'remote_ref_standard' get_release_date(remote_ref)  # S3 method for class 'remote_ref_bioc' get_release_date(remote_ref)  # S3 method for class 'remote_ref' get_release_date(remote_ref)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_release_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get release date. ‚Äî get_release_date","text":"remote_ref (remote_ref) object created pkgdepends::parse_pkg_ref()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_release_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get release date. ‚Äî get_release_date","text":"Date","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_release_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get release date. ‚Äî get_release_date","text":"","code":"if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" && gh::gh_token() !=      \"\" get_release_date(pkgdepends::parse_pkg_ref(\"tidyverse/dplyr@v1.1.0\")) } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" get_release_date(pkgdepends::parse_pkg_ref(\"dplyr@1.1.0\")) } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" get_release_date(pkgdepends::parse_pkg_ref(\"dplyr\")) } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" get_release_date(pkgdepends::parse_pkg_ref(\"MultiAssayExperiment\")) }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get package version. ‚Äî get_version","title":"Get package version. ‚Äî get_version","text":"Get package version.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get package version. ‚Äî get_version","text":"","code":"get_version(remote_ref)  # S3 method for class 'remote_ref' get_version(remote_ref)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get package version. ‚Äî get_version","text":"remote_ref (remote_ref) object created pkgdepends::parse_pkg_ref()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get package version. ‚Äî get_version","text":"Package version created package_version.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/get_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get package version. ‚Äî get_version","text":"","code":"if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" get_version(pkgdepends::parse_pkg_ref(\"dplyr\")) get_version(pkgdepends::parse_pkg_ref(\"tidyverse/dplyr\")) get_version(pkgdepends::parse_pkg_ref(\"bioc::MultiAssayExperiment\")) }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/install_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Executes installation plan. ‚Äî install_ip","title":"Executes installation plan. ‚Äî install_ip","text":"function executes following: solves package dependencies downloads package dependencies installs system requirements installs package dependencies","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/install_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Executes installation plan. ‚Äî install_ip","text":"","code":"install_ip(ip)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/install_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Executes installation plan. ‚Äî install_ip","text":"ip (pkg_installation_plan) object execute","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/install_ip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Executes installation plan. ‚Äî install_ip","text":"pkg_installation_plan object invisibly","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/local_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporarily create a valid DESCRIPTION file to a location that will be deleted ‚Äî local_description","title":"Temporarily create a valid DESCRIPTION file to a location that will be deleted ‚Äî local_description","text":"file deleted parent environment function called exited, R session ends demand via withr::deferred_run()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/local_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporarily create a valid DESCRIPTION file to a location that will be deleted ‚Äî local_description","text":"","code":"local_description(   pkg_list = c(pkgdepends = \"Import\"),   remotes = c(),   need_verdepcheck = c(),   .local_envir = parent.frame() )"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/local_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporarily create a valid DESCRIPTION file to a location that will be deleted ‚Äî local_description","text":"pkg_list (vector) named character vector list paired name type dependency. supports versions using quotes key remotes (vector) string vector contains remotes add DESCRIPTION file need_verdepcheck (vector) string vector contains Config/Need/verdepcheck elements add DESCRIPTION file .local_envir (envirnoment) environment use scoping.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/local_description.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporarily create a valid DESCRIPTION file to a location that will be deleted ‚Äî local_description","text":"","code":"verdepcheck:::local_description(   list(dplyr = \"Import\"),   remotes = \"tidyverse/dplyr\",   need_verdepcheck = \"dplyr=tidyverse/dplyr@v1.1.0\" ) #> [1] \"/tmp/Rtmp3RU10h/DESCRIPTION-bc913fac5c2\""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/map_key_character.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse through vector of remote_ref and retrieve one of the keys of each element ‚Äî map_key_character","title":"Parse through vector of remote_ref and retrieve one of the keys of each element ‚Äî map_key_character","text":"Support function reduce repetitive code","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/map_key_character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse through vector of remote_ref and retrieve one of the keys of each element ‚Äî map_key_character","text":"","code":"map_key_character(x, key)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/map_key_character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse through vector of remote_ref and retrieve one of the keys of each element ‚Äî map_key_character","text":"x (list) list lists internal list contain key key (character(1)) key field retrieve","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/map_key_character.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse through vector of remote_ref and retrieve one of the keys of each element ‚Äî map_key_character","text":"","code":"verdepcheck:::map_key_character(   list(list(a = \"1\", b = \"2\"), list(a = \"3\", b = \"4\"), list(a = \"5\", b = \"6\")),   \"a\" ) #> [1] \"1\" \"3\" \"5\""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/resolve_ignoring_release_remote.html","id":null,"dir":"Reference","previous_headings":"","what":"If solution errors finishes with ","title":"If solution errors finishes with ","text":"solution errors finishes \"dependency conflict\" error re-try ignoring \"@*release\" remote refs detected conflicts.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/resolve_ignoring_release_remote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"If solution errors finishes with ","text":"","code":"resolve_ignoring_release_remote(ip)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/resolve_ignoring_release_remote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"If solution errors finishes with ","text":"ip (pkg_installation_plan) object execute","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/resolve_ignoring_release_remote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"If solution errors finishes with ","text":"pkg_installation_plan object invisibly","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/resolve_ppm_snapshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve the dependencies of a package based on its release date + 1. ‚Äî resolve_ppm_snapshot","title":"Resolve the dependencies of a package based on its release date + 1. ‚Äî resolve_ppm_snapshot","text":"Resolve dependencies package based release date + 1.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/resolve_ppm_snapshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve the dependencies of a package based on its release date + 1. ‚Äî resolve_ppm_snapshot","text":"","code":"resolve_ppm_snapshot(pkg_ref_str, operator, pkg_version)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/solve_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Try to solve using standard method. If error - use resolve_ignoring_release_remote. ‚Äî solve_ip","title":"Try to solve using standard method. If error - use resolve_ignoring_release_remote. ‚Äî solve_ip","text":"Try solve using standard method. error - use resolve_ignoring_release_remote.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/solve_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try to solve using standard method. If error - use resolve_ignoring_release_remote. ‚Äî solve_ip","text":"","code":"solve_ip(ip)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/solve_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Try to solve using standard method. If error - use resolve_ignoring_release_remote. ‚Äî solve_ip","text":"ip (pkg_installation_plan) object execute","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/solve_ip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Try to solve using standard method. If error - use resolve_ignoring_release_remote. ‚Äî solve_ip","text":"pkg_installation_plan object invisibly","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/solve_ip.min_isolated_deps_installation_proposal.html","id":null,"dir":"Reference","previous_headings":"","what":"Try to solve using min_isolated method. If Error - use resolve_ignoring_release_remote ‚Äî solve_ip.min_isolated_deps_installation_proposal","title":"Try to solve using min_isolated method. If Error - use resolve_ignoring_release_remote ‚Äî solve_ip.min_isolated_deps_installation_proposal","text":"direct dependency, resolve package using PPM snapshot release date + 1. Finally, combine resolutions run solve.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/solve_ip.min_isolated_deps_installation_proposal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try to solve using min_isolated method. If Error - use resolve_ignoring_release_remote ‚Äî solve_ip.min_isolated_deps_installation_proposal","text":"","code":"# S3 method for class 'min_isolated_deps_installation_proposal' solve_ip(ip)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/solve_ip_ignore_remotes_release.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve installation plan ignoring entries with ","title":"Solve installation plan ignoring entries with ","text":"Solve installation plan ignoring entries \"@*release\" remote refs detected conflicts.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/solve_ip_ignore_remotes_release.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve installation plan ignoring entries with ","text":"","code":"solve_ip_ignore_remotes_release(ip)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/solve_ip_ignore_remotes_release.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve installation plan ignoring entries with ","text":"ip (pkg_installation_plan) object execute","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/solve_ip_ignore_remotes_release.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve installation plan ignoring entries with ","text":"pkg_installation_plan object invisibly","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/version_from_desc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get package version from description ‚Äî version_from_desc","title":"Get package version from description ‚Äî version_from_desc","text":"Get package version description","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/version_from_desc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get package version from description ‚Äî version_from_desc","text":"","code":"version_from_desc(d, pkg_name)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/version_from_desc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get package version from description ‚Äî version_from_desc","text":"d (desc) DESCRIPTION object desc::desc pkg_name (character) Package name","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/version_from_desc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get package version from description ‚Äî version_from_desc","text":"","code":"d <- desc::desc(cmd = \"!new\")  d$set_dep(\"magrittr\", type = \"Imports\", version = \"*\") verdepcheck:::version_from_desc(d, \"magrittr\") #> $package #> [1] \"magrittr\" #>  #> $ver_str #> [1] \"*\" #>  #> $op #> [1] \"\" #>  #> $op_ver #> [1] \"\" #>   d$set_dep(\"magrittr\", type = \"Imports\", version = \">= 1.5\") verdepcheck:::version_from_desc(d, \"magrittr\") #> $package #> [1] \"magrittr\" #>  #> $ver_str #> [1] \">= 1.5\" #>  #> $op #> [1] \">=\" #>  #> $op_ver #> [1] \"1.5\" #>"},{"path":"https://insightsengineering.github.io/verdepcheck/main/news/index.html","id":"verdepcheck-0009001","dir":"Changelog","previous_headings":"","what":"verdepcheck 0.0.0.9001","title":"verdepcheck 0.0.0.9001","text":"Initialize package.","code":""}]
