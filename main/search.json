[{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"Github Flow","title":"Contribution Guidelines","text":"repository uses Github Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommedations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependenct package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pawel Rucki. Author, maintainer.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pawel Rucki (2023). verdepcheck: Check Package using Various Versions Dependencies. R package version 0.0.0.9000, https://github.com/insightsengineering/verdepcheck/.","code":"@Manual{,   title = {verdepcheck: Check Package using Various Versions of Dependencies},   author = {{Pawel Rucki}},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/insightsengineering/verdepcheck/}, }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/index.html","id":"verdepcheck","dir":"","previous_headings":"","what":"Check Package using Various Versions of Dependencies","title":"Check Package using Various Versions of Dependencies","text":"ever encounter following errors? package tool package developers check package using various versions dependencies. help detect new breaking changes dependencies well minimal version supported.","code":"Error: object ‚Äòfoo‚Äô is not exported by 'namespace:bar' `foo()` was deprecated in bar 1.0.0. i Please use `baz()` instead."},{"path":"https://insightsengineering.github.io/verdepcheck/main/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Check Package using Various Versions of Dependencies","text":"Typical workflow includes following: read local package dependencies DESCRIPTION file derive dependencies version according strategy used resolve identify potential conflicts dependencies download install temporary directory execute R CMD CHECK using directory previous step library path Supported strategies : max - use greatest (development) versions dependencies release - use latest release - using @*release reference remotes package min - use minimal version dependencies main functions : new_<strategy>_deps_installation_proposal creating installation_proposal objects <strategy>_deps_check creates executes installation_proposal run \"R CMD CHECK\" heavily based pkgdepends dependency resolution rcmdcheck executing \"R CMD CHECK\".","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Check Package using Various Versions of Dependencies","text":"recommended create use GitHub PAT install latest version package. PAT, run following:","code":"Sys.setenv(GITHUB_PAT = \"your_access_token_here\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"insightsengineering/verdepcheck@*release\")"},{"path":"https://insightsengineering.github.io/verdepcheck/main/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Check Package using Various Versions of Dependencies","text":"main goal package authors use within GitHub Action CI tool.","code":"x <- max_deps_check(\"(path to your package)\")  # print results for debugging x$ip$show_solution() x$ip$draw()  # create artifact x$ip$create_lockfile(\"/path/to/pkg.lock\")  # print R CMD CHECK results x$check$session_info x$check$status"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Executes rcmdcheck::rcmdcheck() on a local package using libpath from the installation plan. ‚Äî check_ip","title":"Executes rcmdcheck::rcmdcheck() on a local package using libpath from the installation plan. ‚Äî check_ip","text":"Executes rcmdcheck::rcmdcheck() local package using libpath installation plan.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Executes rcmdcheck::rcmdcheck() on a local package using libpath from the installation plan. ‚Äî check_ip","text":"","code":"check_ip(ip, path, build_args = character(), check_args = character(), ...)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Executes rcmdcheck::rcmdcheck() on a local package using libpath from the installation plan. ‚Äî check_ip","text":"ip (pkg_installation_plan) object extract libpath path (string) path package sources build_args (string) value passed build_args argument rcmdcheck::rcmdcheck() check_args (string) value passed args argument rcmdcheck::rcmdcheck() ... arguments passed rcmdcheck::rcmdcheck()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/check_ip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Executes rcmdcheck::rcmdcheck() on a local package using libpath from the installation plan. ‚Äî check_ip","text":"S3 object (list) fields errors, warnings notes. character vectors containing output failed check.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","title":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","text":"Execute R CMD CHECK local package dependencies pre-installed using various strategies.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","text":"","code":"max_deps_check(   path,   config = list(),   build_args = character(),   check_args = character(),   ... )  release_deps_check(   path,   config = list(),   check_args = character(),   build_args = character(),   ... )  min_deps_check(   path,   config = list(),   check_args = character(),   build_args = character(),   ... )"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","text":"path (string) path package sources config (list) configuration options. See pkgdepends::pkg_config details. include library temporary directory used simulates clean environment without using pre-installed packages. include dependencies TRUE value used means hard dependencies plus Suggests. build_args (string) value passed build_args argument rcmdcheck::rcmdcheck() check_args (string) value passed args argument rcmdcheck::rcmdcheck() ... arguments passed rcmdcheck::rcmdcheck()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","text":"named list two elements: \"ip\" - installation plan object \"check\" - returned value rcmdcheck::rcmdcheck()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","text":"order make full use package features, recommended provide \"Remotes\" section package DESCRIPTION file dependent packages. functions supported package remotes GitHub.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check.html","id":"strategies","dir":"Reference","previous_headings":"","what":"strategies","title":"Execute R CMD CHECK on a local package with all dependencies pre-installed using various strategies. ‚Äî max_deps_check","text":"Currently implemented strategies: max - use greatest version dependencies pulled GitHub. release - read Remotes field GitHub type package source, overwrite reference (.e. @<commitish> #<pr> @*release) tag associated latest release. mimics behaviour @*release endpoint remotes package use yet supported pkgdepends. min - use lowest version dependencies. version specified minimal available version assumed. See find_minver_remote_ref details minimal version determined. modification done direct dependencies. Indirect ones installed usual.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Executes installation plan and rcmdcheck::rcmdcheck() ‚Äî deps_check_internal","title":"Executes installation plan and rcmdcheck::rcmdcheck() ‚Äî deps_check_internal","text":"Executes installation plan rcmdcheck::rcmdcheck()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Executes installation plan and rcmdcheck::rcmdcheck() ‚Äî deps_check_internal","text":"","code":"deps_check_internal(ip, path, build_args, check_args, ...)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Executes installation plan and rcmdcheck::rcmdcheck() ‚Äî deps_check_internal","text":"ip (pkg_installation_plan) object execute path (string) path package sources build_args (string) value passed build_args argument rcmdcheck::rcmdcheck() check_args (string) value passed args argument rcmdcheck::rcmdcheck() ... arguments passed rcmdcheck::rcmdcheck()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_check_internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Executes installation plan and rcmdcheck::rcmdcheck() ‚Äî deps_check_internal","text":"named list two elements: \"ip\" - installation plan object \"check\" - returned value rcmdcheck::rcmdcheck()","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":null,"dir":"Reference","previous_headings":"","what":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"functionalities read local package DESCRIPTION file, derive dependencies create installation proposal using various strategies package versions described .","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"","code":"new_max_deps_installation_proposal(path, config = list())  new_release_deps_installation_proposal(path, config = list())  new_min_deps_installation_proposal(path, config = list())"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"path (string) path package sources config (list) configuration options. See pkgdepends::pkg_config details. include library temporary directory used simulates clean environment without using pre-installed packages. include dependencies TRUE value used means hard dependencies plus Suggests.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"pkg_installation_plan object","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"order make full use package features, recommended provide \"Remotes\" section package DESCRIPTION file dependent packages. functions supported package remotes GitHub.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":"strategies","dir":"Reference","previous_headings":"","what":"strategies","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"Currently implemented strategies: max - use greatest version dependencies pulled GitHub. release - read Remotes field GitHub type package source, overwrite reference (.e. @<commitish> #<pr> @*release) tag associated latest release. mimics behaviour @*release endpoint remotes package use yet supported pkgdepends. min - use lowest version dependencies. version specified minimal available version assumed. See find_minver_remote_ref details minimal version determined. modification done direct dependencies. Indirect ones installed usual.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/deps_installation_proposal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create installation proposal using various dependency strategies ‚Äî new_max_deps_installation_proposal","text":"","code":"if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" x <- new_max_deps_installation_proposal(\".\") x$solve() x$get_solution() } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" x <- new_release_deps_installation_proposal(\".\") x$solve() x$get_solution() } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" x <- new_min_deps_installation_proposal(\".\") x$solve() x$get_solution() }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/find_minver_remote_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify minimal version. ‚Äî find_minver_remote_ref","title":"Identify minimal version. ‚Äî find_minver_remote_ref","text":"Identify minimal version. Identify minimal version CRAN-type remote. use pkgcache::cran_archive_list() obtain historical data. Identify minimal version GitHub type remote.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/find_minver_remote_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify minimal version. ‚Äî find_minver_remote_ref","text":"","code":"find_minver_remote_ref(remote_ref, op = \"\", op_ver = \"\")  # S3 method for remote_ref find_minver_remote_ref(remote_ref, op = \"\", op_ver = \"\")  # S3 method for remote_ref_cran find_minver_remote_ref(remote_ref, op = \"\", op_ver = \"\")  # S3 method for remote_ref_standard find_minver_remote_ref(remote_ref, op = \"\", op_ver = \"\")  # S3 method for remote_ref_github find_minver_remote_ref(remote_ref, op = \"\", op_ver = \"\")"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/find_minver_remote_ref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify minimal version. ‚Äî find_minver_remote_ref","text":"remote_ref (remote_ref) object created pkgdepends::parse_pkg_ref() op (character(1)) optional, version condition comparison operator (e.g. \">\", \">=\") op_ver (character(1)) optional, version number op argument applied","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/find_minver_remote_ref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify minimal version. ‚Äî find_minver_remote_ref","text":"(remote_ref) object reference package minimal version.","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/find_minver_remote_ref.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Identify minimal version. ‚Äî find_minver_remote_ref","text":"cran, standard (treated cran) github remote type supported. rest, return remote_ref argument.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/find_minver_remote_ref.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify minimal version. ‚Äî find_minver_remote_ref","text":"","code":"find_minver_remote_ref(pkgdepends::parse_pkg_ref(\"bioc::MultiAssayExperiment\")) #> $package #> [1] \"MultiAssayExperiment\" #>  #> $atleast #> [1] \"\" #>  #> $version #> [1] \"\" #>  #> $ref #> [1] \"bioc::MultiAssayExperiment\" #>  #> $type #> [1] \"bioc\" #>  #> $params #> character(0) #>  #> attr(,\"class\") #> [1] \"remote_ref_bioc\" \"remote_ref\"      \"list\"            if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" find_minver_remote_ref(pkgdepends::parse_pkg_ref(\"cran::dplyr\")) } if (FALSE) { # Sys.getenv(\"R_USER_CACHE_DIR\", \"\") != \"\" find_minver_remote_ref(pkgdepends::parse_pkg_ref(\"dplyr\")) } if (FALSE) { # gh::gh_token() != \"\" find_minver_remote_ref(pkgdepends::parse_pkg_ref(\"cran/dplyr\")) }"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/install_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Executes installation plan. ‚Äî install_ip","title":"Executes installation plan. ‚Äî install_ip","text":"function executes following: solves package dependencies downloads package dependencies installs system requirements installs package dependencies","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/install_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Executes installation plan. ‚Äî install_ip","text":"","code":"install_ip(ip)"},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/install_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Executes installation plan. ‚Äî install_ip","text":"ip (pkg_installation_plan) object execute","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/reference/install_ip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Executes installation plan. ‚Äî install_ip","text":"pkg_installation_plan object invisibly","code":""},{"path":"https://insightsengineering.github.io/verdepcheck/main/news/index.html","id":"verdepcheck-0009000","dir":"Changelog","previous_headings":"","what":"verdepcheck 0.0.0.9000","title":"verdepcheck 0.0.0.9000","text":"Initialize package.","code":""}]
