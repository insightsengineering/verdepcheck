% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check.R
\name{max_deps_check}
\alias{max_deps_check}
\alias{release_deps_check}
\alias{min_deps_check}
\title{Execute \verb{R CMD CHECK} on a local package with all dependencies pre-installed using various strategies.}
\usage{
max_deps_check(
  path,
  config = list(),
  build_args = character(),
  check_args = character(),
  ...
)

release_deps_check(
  path,
  config = list(),
  check_args = character(),
  build_args = character(),
  ...
)

min_deps_check(
  path,
  config = list(),
  check_args = character(),
  build_args = character(),
  ...
)
}
\arguments{
\item{path}{(\code{string}) path to the package sources}

\item{config}{(\code{list}) configuration options. See \code{\link[pkgdepends:pkg_config]{pkgdepends::pkg_config}} for details.
If it does not include \code{library} then temporary directory is used which simulates clean environment
without using any pre-installed packages.
If it does not include \code{dependencies} then \code{TRUE} value is used which means all hard dependencies plus \code{Suggests}.}

\item{check_args}{(\code{string}) value passed as \code{args} argument into \code{\link[rcmdcheck:rcmdcheck]{rcmdcheck::rcmdcheck()}}}
}
\value{
a named \code{list} with two elements:
\itemize{
\item \code{"ip"} - installation plan object
\item \code{"check"} - returned value from \code{\link[rcmdcheck:rcmdcheck]{rcmdcheck::rcmdcheck()}}
}
}
\description{
Execute \verb{R CMD CHECK} on a local package with all dependencies pre-installed using various strategies.
}
\note{
Some functions are supported only for package remotes from GitHub.
}
\section{strategies}{

Currently implemented strategies:
\itemize{
\item \code{max} - use the greatest version of dependencies.
\item \code{release} - read \code{Remotes} field and for each GitHub type of the package source replace any further
reference (i.e. \verb{@<commitish>} \verb{#<pr>} or \verb{@*release}) with a tag associated with the latest release.
Please note that \verb{@*release} endpoint in \code{Remotes} is not supported by \code{pkgdepends}.
\item \code{min} - use the lowest version of dependencies. If no version is specified then the minimal available
version is assumed. See \link{find_minver_remote_ref} for details how the minimal version is determined.
}

Any modification is done for \emph{direct} dependencies. Indirect ones are installed as usual.
}

\seealso{
deps_installation_proposal
}
